name: autobuild_clf
on:
  push:
    branches:
      - master
      - 'V**'
      - dev
  pull_request:
    branches:
      - master
      - 'V**'
      - dev
env:
  GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
  REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          architecture: 'x64'
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - uses: iterative/setup-cml@v1
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch torchvision --extra-index-url https://download.pytorch.org/whl/cpu
          pip install -e '.[dev,cv,cv_classification]'
          pip install dvc dvc-gdrive
          npm install -g markdown-table-cli
      - name: Download data
        run: |
          echo "$GDRIVE_CREDENTIALS_DATA" > credentials.json
          dvc remote modify gdrive --local gdrive_user_credentials_file ./credentials.json
          dvc pull
          ls -la samples
      - name: Test with pytest
        run: |
          pytest tests/classification --capture=no
      - name: Display report
        run: |
          echo "# Classification Report" > report.md
          echo "#### Metrics" >> report.md
          cat runs/pytest_clf/Validation/metrics.json | md-table >> report.md
          echo "#### Confusion Matrix" >> report.md
          echo "![Confusion Matrix](runs/pytest_clf/Validation/cfm.png)" >> report.md
          echo "#### Errorcases" >> report.md
          echo "![Confusion Matrix](runs/pytest_clf/Validation/errorcases.png)" >> report.md

          echo "#### Hyperparameters Tuning" >> report.md
          cat runs/optuna/clf/overview/leaderboard.json | md-table >> report.md
          echo "![History](runs/optuna/clf/overview/history.png)" >> report.md
          echo "![Contour plot](runs/optuna/clf/overview/contour.png)" >> report.md
          echo "![Parallel](runs/optuna/clf/overview/parallel_coordinate.png)" >> report.md
          echo "![Importance](runs/optuna/clf/overview/param_importances.png)" >> report.md
          echo "![Slice](runs/optuna/clf/overview/slice.png)" >> report.md

          cml comment create report.md
